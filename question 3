#include <iostream>
using namespace std;

//part a: linear time method
int find_missing_linear(int arr[], int n) {
    int total = n * (n + 1) / 2; // sum from 1..n
    int sum_arr = 0;
    for (int i = 0; i < n - 1; i++) {
        sum_arr += arr[i];
    }
    return total - sum_arr;
}

//part b: binary search method
int find_missing_binary(int arr[], int n) {
    int start = 0, end = n - 2; // since array has n-1 elements
    while (start <= end) {
        int mid = (start + end) / 2;
        if (arr[mid] != mid + 1)
            end = mid - 1;
        else
            start = mid + 1;
    }
    return start + 1;
}

int main() {
    int nums[] = {1, 2, 3, 5, 6}; // missing 4
    int n = 6; // total numbers should be 1..6

    cout << "Missing (linear): " << find_missing_linear(nums, n) << endl;
    cout << "Missing (binary): " << find_missing_binary(nums, n) << endl;

    return 0;
}

